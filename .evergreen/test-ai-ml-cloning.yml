########################################
# Evergreen Template for MongoDB Drivers
########################################

# When a task that used to pass starts to fail
# Go through all versions that may have been skipped to detect
# when the task started failing
stepback: true

# Mark a failure as a system/bootstrap failure (purple box) rather then a task
# failure by default.
# Actual testing tasks are marked with `type: test`
command_type: system

# Protect ourself against rogue test case, or curl gone wild, that runs forever
# Good rule of thumb: the averageish length a task takes, times 5
# That roughly accounts for variable system performance for various buildvariants
exec_timeout_secs: 3600 # 60 minutes is the longest we'll ever run (primarily
                        # for macos hosts)

# What to do when evergreen hits the timeout (`post:` tasks are run automatically)
timeout:
  - command: shell.exec
    params:
      script: |
        ls -la

functions:
  "fetch semantic kernel":
    - command: shell.exec
      params:
        script: |
          mkdir semantic-kernel
          cd semantic-kernel
          git clone https://github.com/microsoft/semantic-kernel.git

  "set up local atlas":
  - command: shell.exec
    params:
      script: |
        NONINTERACTIVE=1 brew install mongodb-atlas podman mongosh mongodb-compass mongodb-database-tools
        atlas deployments setup EGDB --type local --force
        atlas deployments indexes create --file indexVector.json

tasks:
  - name: test-semantic-kernel
    run_on: macos-1100
    commands:
    - func: "set up local atlas"
    - func: "fetch semantic kernel"
    - command: shell.exec
      type: test
      params:
        script: |
          atlas deployments start EGDB
          cd semantic-kernel/semantic-kernel/python
          pip install poetry
          poetry install
          OPENAI_API_KEY="577253832a514d169fc37e1d209fa42e" \
          OPENAI_ORG_ID="" \
          AZURE_OPENAI_DEPLOYMENT_NAME="" \
          AZURE_OPENAI_ENDPOINT="" \
          AZURE_OPENAI_API_KEY="" \
          MONGODB_ATLAS_CONNECTION_STRING=$(atlas deployments connect EGDB --connectWith connectionString) \
          poetry run pytest tests/integration/connectors/memory/test_mongodb_atlas.py


buildvariants:
- matrix_name: "test-macos"
  matrix_spec:
    platform:
      # MacOS introduced SSL support with MongoDB >= 3.2.
      # Older server versions (2.6, 3.0) are supported without SSL.
      - macos-1014
    auth: "*"
    ssl: "*"
  exclude_spec:
    # No point testing with SSL without auth.
    - platform: macos-1014
      auth: "noauth"
      ssl: "ssl"
  display_name: "${platform} ${auth} ${ssl}"
